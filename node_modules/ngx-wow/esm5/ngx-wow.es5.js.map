{"version":3,"file":"ngx-wow.es5.js","sources":["../../tmp/wow.module.ts","../../tmp/models/wow-config.ts","../../tmp/services/window.service.ts","../../tmp/services/wow.service.ts"],"names":[],"mappings":";;;;;;;;AAAA;AAAI;AAA8B;;AAAI;AACf;AAEnB;gDAKH,QAAQ,SAAC;kBACR,OAAO,EAAE,0BACP,YAAY,sBACb,kBACF;;;;;;;;;;;gDACS;AAAC,uBAbX;AAAE;AAAM;AAAC;AAAI;AAAkC;AACtB;AAAI;AAAI;AAED;ACAhC;AAAS;AAGa;AAHtB;AAGS;AAA8B;AAAY;AAK3B;AAAY,wBAHvB,KAAK;AAClB;AAEK;AAEA;AAAY,4BAAA,UAAU;AAC3B;AAEK;AACM;AAEA;AAGT,sBAHS,CAAC;AACZ;AAEK;AAEA;AACL,sBADW,IAAI;AACf;AAEK;AAEA;AAEJ,oBAFQ,IAAI;AACb;AACK,uBA/BL;AAAE,IAqCD;AACA;AAAC;AAAI;AAAkC;AAAyC;AAAI;AAAC;AAAI;AAAkC;AAAyC;ACtCrK;AAAI;AAGF;AAAI;AAEF;AACiB;AAEnB,IAEA,sBAAI,uCAAY;AAAI;AACd;AAIN;AAAY,QALZ;AAAc,YACZ,OAAO,OAAO,EAAE,CAAC;AACrB,SAAG;AACF;AAEuB;AACF,OAJnB,AAJO;iDAHT,UAAU,SAAC,sBACV,UAAU,EAAE,MAAM,mBACnB,/HACU;;;;;;;;gDASsB;AAAC,wBAjBlC;AAAE;AAAM;AAAI;AAAe;AAe3B;AAAqB;AACyB,IAC5C,OAAO,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,SAAS,CAAC;AAC5D,CAAC;AACD;AAAC;AAAI;AAAkC;AAAyC;ACnBhF;AACK,IA8BH,uBAAY,aAA4B;AAC1C;AACI,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,OAAO,EAAe,CAAC;AACzD;AACI,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAChE,QACI,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC;AAC7C,KAAG;AACH;AACO;AAA0B;AACnB;AAAQ,IADpB,4BAAI;AAAO;AACZ;AAAmB;AAAQ,IAD1B,UAAK,MAAqB;AAAI,QAA9B,iBASC;AACH,QATI,IAAI,IAAI,CAAC,MAAM,EAAE;AAAE;AACX,YAAN,qBAAM,SAAS,GAAG,MAAM,IAAI,EAAE,CAAC;AACrC;AACM,YAAA,SAAS,CAAC,QAAQ,GAAG,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,GAAA,CAAC;AAChE;AAEK,YAAC,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;AAChC,SAAK;AACL,KAAG,CA5BO;AAAC;0BAHV,UAAU,SAAC,7CAKR;SAJF,UAAU,EAAE,MAAM,3BAOJ,gBAtBP,aAAa;AAAK;EAgB1B,FAhBoC;;;;;;;;uEAST;AAAC,wBAb7B;AAAE;AAAM;AAAC;AAAI;AACV;AACH;AACG;AAAC;AAAI;AAAkC;AACP;AAAI;AAAC;AAAI;AAGrB;AACtB;AACA;AAAC;AAGI","sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WindowService, NgwWowService } from './services/index';\n\n/**\n * Main module of the library\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgwWowModule {\n}\n","/**\n * Configuration for the NgwWowService service.\n */\nexport class NgwWowConfig {\n\n  /**\n   * Class name that reveals the hidden box when user scrolls.\n   */\n  boxClass?= 'wow';\n\n  /**\n   * Class name that triggers the CSS animations ('animated' by default for the animate.css library)\n   */\n  animateClass?= 'animated';\n\n  /**\n   * Define the distance between the bottom of browser viewport and the top of hidden box.\n   * When the user scrolls and reach this distance the hidden box is revealed.\n   */\n  offset?= 0;\n\n  /**\n   * Turn on/off WOW.js on mobile devices.\n   */\n  mobile?= true;\n\n  /**\n   * Consatantly check for new WOW elements on the page.\n   */\n  live?= true;\n\n  /**\n   * Callback called when the given box element is shown.\n   */\n  callback?: (box: HTMLElement) => void;\n\n  scrollContainer?: string;\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service to interact with the window object.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowService {\n\n  get nativeWindow(): Window {\n    return _window();\n  }\n}\n\nfunction _window(): Window {\n  // Return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { NgwWowConfig } from '../models/index';\nimport { WindowService } from './window.service';\n\n/**\n * Type definition for the `WOW` object from `WOW.js` library.\n */\ndeclare class WOW {\n  constructor (config?: NgwWowConfig);\n  /**\n   * Initializes the WOW.js library\n   * @param config the custom configuration to use\n   */\n  init(config?: NgwWowConfig): void;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgwWowService {\n\n  // Window Object\n  private window: Window;\n\n  // Observable  source that emits the box that is about to be shown by WOW\n  private itemRevealedSource: Subject<HTMLElement>;\n  // Observable users can subscribed to, in order to be notified when the box element is about to be shown by WOW\n  itemRevealed$: Observable<HTMLElement>;\n\n  constructor(windowService: WindowService) {\n    // Observable  source\n    this.itemRevealedSource = new Subject<HTMLElement>();\n    // Observable  stream\n    this.itemRevealed$ = this.itemRevealedSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n  }\n\n  init(config?: NgwWowConfig): void {\n    if (this.window) { // For Angular Universal suport\n      const wowConfig = config || {};\n      // Set callback hook:\n      wowConfig.callback = () => this.itemRevealedSource.next();\n\n      // Initializes the library\n      new WOW(wowConfig).init();\n    }\n  }\n\n}\n"]}